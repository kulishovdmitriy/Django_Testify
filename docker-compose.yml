services:

  server_backend:
    build: ./
    container_name: server_backend
    restart: always
    command:
      - commands/${RUN_MODE}.sh
    volumes:
      - .:/project/src
      - static_content:/var/www/web_universe
    environment:
      - DJANGO_SETTINGS_MODULE=lms.settings.${RUN_MODE}
    ports:
      - "8011:${PORT}"
    depends_on:
      - server_postgresql
    env_file:
      - .env


  server_postgresql:
    image: "postgres:13"
    container_name: server_postgresql
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    env_file:
      - .env


  server_nginx:
    image: nginx:1.27-alpine
    container_name: server_nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - static_content:/var/www/web_universe
    depends_on:
      - server_backend
    env_file:
      - .env


  server_rabbitmq:
    image: rabbitmq:3.13.7-management-alpine
    container_name: server_rabbitmq
    restart: always
    ports:
      - "8181:15672"
      - "5672:5672"
    env_file:
      - .env


  server_celery:
    build: .
    container_name: server_celery
    restart: always
    command:
      - commands/start_celery.sh
    volumes:
      - .:/project/src
    environment:
      - DJANGO_SETTINGS_MODULE=lms.settings.${RUN_MODE}
    depends_on:
      - server_rabbitmq
    env_file:
      - .env


  server_celery_beat:
    build: .
    container_name: server_celery_beat
    restart: always
    command:
      - commands/start_celery_beat.sh
    volumes:
      - .:/project/src
    depends_on:
      - server_celery
      - server_rabbitmq
    env_file:
      - .env


volumes:
  pgdata: {}
  static_content: {}