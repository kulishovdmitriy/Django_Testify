services:

  backend_prod:
    build: ./
    container_name: backend_prod
    restart: always
    command:
      - commands/${RUN_MODE}.sh
    volumes:
      - .:/project/src
      - static_content:/var/www/web_universe
    environment:
      - DJANGO_SETTINGS_MODULE=lms.settings.${RUN_MODE}
    ports:
      - "8011:${PORT}"
    depends_on:
      - postgresql_prod
    env_file:
      - .env

  postgresql_prod:
    image: "postgres:16-alpine"
    container_name: postgresql_prod
    restart: always
    volumes:
      - pgdata_prod:/var/lib/postgresql/data_prod
    ports:
      - "5433:5432"
    env_file:
      - .env

  nginx_prod:
    image: nginx:1.27-alpine
    container_name: nginx_prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/default_prod.conf:/etc/nginx/conf.d/default.conf
      - static_content:/var/www/web_universe
    depends_on:
      - backend_prod
    env_file:
      - .env

  rabbitmq_prod:
    image: rabbitmq:3.13.7-management-alpine
    container_name: rabbitmq_prod
    restart: always
    ports:
      - "8181:15672"
      - "5672:5672"
    env_file:
      - .env

  celery_prod:
    build: .
    container_name: celery_prod
    restart: always
    command:
      - commands/start_celery.sh
    volumes:
      - .:/project/src
    environment:
      - DJANGO_SETTINGS_MODULE=lms.settings.${RUN_MODE}
    depends_on:
      - rabbitmq_prod
    env_file:
      - .env

  celery_beat_prod:
    build: .
    container_name: celery_beat_prod
    restart: always
    command:
      - commands/start_celery_beat.sh
    volumes:
      - .:/project/src
    depends_on:
      - celery_prod
      - rabbitmq_prod
    env_file:
      - .env

volumes:
  pgdata_prod: {}
  static_content: {}
